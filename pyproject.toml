[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "systems-performance"
version = "1.0.0"
description = "Systems performance analysis tool based on Brendan Gregg's USE Method with context engineering"
authors = [
    {name = "Reinaldo Saraiva", email = "reinaldo.saraiva@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
keywords = ["performance", "monitoring", "systems", "use-method", "devops"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "psutil>=5.9.0",
    "matplotlib>=3.6.0",
    "pandas>=1.5.0",
    "schedule>=1.2.0",
    "jinja2>=3.1.0",
    "numpy>=1.21.0,<2.0.0",
    "rich>=12.0.0",
    "click>=8.0.0",
    "pydantic>=1.10.0",
    "pyautogen>=0.2.0",
    "openai>=1.0.0",
    "anthropic>=0.8.0",
    "docker>=6.0.0",
    "aiohttp>=3.8.0",
    "prometheus-client>=0.16.0",
    "asyncio>=3.4.3",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "autogen-ext[openai]>=0.7.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "black>=22.0.0",
    "ruff>=0.0.200",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.5.0",
    "mkdocstrings[python]>=0.19.0",
]

[project.scripts]
sysperf = "src.main:main"

[project.urls]
Homepage = "https://github.com/reinaldosaraiva/systems-performance"
Documentation = "https://github.com/reinaldosaraiva/systems-performance/docs"
Repository = "https://github.com/reinaldosaraiva/systems-performance.git"
Issues = "https://github.com/reinaldosaraiva/systems-performance/issues"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "psutil.*",
    "matplotlib.*",
    "pandas.*",
    "schedule.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
