version: '3.8'

services:
  # Prometheus Local Server
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus-local
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus_local.yml:/etc/prometheus/prometheus.yml:ro
      - ./docker/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - ./docker/use-method-alerts-queueing.yml:/etc/prometheus/use-method-alerts-queueing.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana para Dashboards
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      prometheus:
        condition: service_healthy

  # VictoriaMetrics para Long-Term Storage
  victoria-metrics:
    image: victoriametrics/victoria-metrics:v1.93.0
    container_name: victoria-metrics
    ports:
      - "8428:8428"  # HTTP
      - "8481:8481"  # Ingestion
    volumes:
      - victoria_data:/victoria-metrics-data
    command:
      - '--storageDataPath=/victoria-metrics-data'
      - '--httpListenAddr=:8428'
      - '--retentionPeriod=90d'  # 90 dias de retenção
      - '--memory.allowedPercent=60'
    networks:
      - monitoring
    restart: unless-stopped

  # Node Exporter Local (monitora o host)
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: node-exporter-local
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - monitoring
    restart: unless-stopped

  # AlertManager
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./docker/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring
    restart: unless-stopped

  # Redis para cache de análises
  redis:
    image: redis:7.0-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - monitoring
    restart: unless-stopped

  # Nginx Proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: monitoring-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
      - grafana

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  victoria_data:
    driver: local
  alertmanager_data:
    driver: local
  redis_data:
    driver: local

networks:
  monitoring:
    driver: bridge