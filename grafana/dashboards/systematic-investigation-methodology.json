{
  "dashboard": {
    "id": null,
    "title": "Systematic Performance Investigation - Chapter 2 Methodology",
    "description": "Scientific approach to performance investigation: Hypothesis, Validation, Different Perspectives",
    "tags": ["methodology", "investigation", "hypothesis", "queuing-theory", "perspectives"],
    "timezone": "browser",
    "schemaVersion": 38,
    "version": 1,
    "refresh": "10s",
    "time": {
      "from": "now-1h",
      "to": "now"
    },
    "templating": {
      "list": [
        {
          "name": "instance",
          "type": "query",
          "datasource": "Prometheus-Local",
          "query": "label_values(up, instance)",
          "multi": false,
          "includeAll": false,
          "refresh": 1
        },
        {
          "name": "time_scale",
          "type": "custom",
          "options": [
            {"text": "Microseconds", "value": "1us"},
            {"text": "Milliseconds", "value": "1ms"},
            {"text": "Seconds", "value": "1s"},
            {"text": "Minutes", "value": "1m"}
          ],
          "current": {
            "text": "Milliseconds",
            "value": "1ms"
          }
        }
      ]
    },
    "panels": [
      {
        "id": 1,
        "title": "🎯 Step 1: Global Metrics Collection - System Overview",
        "type": "row",
        "collapsed": false,
        "gridPos": {"h": 1, "w": 24, "x": 0, "y": 0}
      },
      {
        "id": 2,
        "title": "System Health Overview Matrix",
        "type": "stat",
        "gridPos": {"h": 4, "w": 24, "x": 0, "y": 1},
        "targets": [
          {
            "expr": "up{instance=\"$instance\"}",
            "legendFormat": "Status",
            "refId": "A"
          },
          {
            "expr": "100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[5m])) * 100)",
            "legendFormat": "CPU Usage",
            "refId": "B"
          },
          {
            "expr": "(node_memory_MemTotal_bytes{instance=\"$instance\"} - node_memory_MemAvailable_bytes{instance=\"$instance\"}) / node_memory_MemTotal_bytes{instance=\"$instance\"} * 100",
            "legendFormat": "Memory Usage",
            "refId": "C"
          },
          {
            "expr": "max(rate(node_disk_io_time_seconds_total{instance=\"$instance\"}[5m])) * 100",
            "legendFormat": "Disk I/O",
            "refId": "D"
          },
          {
            "expr": "sum(rate(node_network_receive_errs_total{instance=\"$instance\"}[5m])) + sum(rate(node_network_transmit_errs_total{instance=\"$instance\"}[5m]))",
            "legendFormat": "Network Errors",
            "refId": "E"
          },
          {
            "expr": "rate(node_context_switches_total{instance=\"$instance\"}[5m])",
            "legendFormat": "Context Switches",
            "refId": "F"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "thresholds": {
              "steps": [
                {"color": "green", "value": 0},
                {"color": "yellow", "value": 70},
                {"color": "red", "value": 90}
              ]
            }
          },
          "overrides": [
            {
              "matcher": {"id": "byName", "options": "Status"},
              "properties": [
                {"id": "mappings", "value": [
                  {"options": {"0": {"text": "DOWN", "color": "red"}}, "type": "value"},
                  {"options": {"1": {"text": "UP", "color": "green"}}, "type": "value"}
                ]}
              ]
            },
            {
              "matcher": {"id": "byName", "options": "CPU Usage"},
              "properties": [{"id": "unit", "value": "percent"}]
            },
            {
              "matcher": {"id": "byName", "options": "Memory Usage"},
              "properties": [{"id": "unit", "value": "percent"}]
            },
            {
              "matcher": {"id": "byName", "options": "Disk I/O"},
              "properties": [{"id": "unit", "value": "percent"}]
            },
            {
              "matcher": {"id": "byName", "options": "Network Errors"},
              "properties": [{"id": "unit", "value": "errors/sec"}]
            },
            {
              "matcher": {"id": "byName", "options": "Context Switches"},
              "properties": [{"id": "unit", "value": "short"}]
            }
          ]
        },
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center"
        }
      },
      {
        "id": 10,
        "title": "🔍 Step 2: Anomaly Detection - Identifying Abnormal Behavior",
        "type": "row",
        "collapsed": false,
        "gridPos": {"h": 1, "w": 24, "x": 0, "y": 5}
      },
      {
        "id": 11,
        "title": "Anomaly Detection - Statistical Outliers",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 6},
        "targets": [
          {
            "expr": "100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[1m])) * 100)",
            "legendFormat": "CPU Current",
            "refId": "A"
          },
          {
            "expr": "avg_over_time((100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[1m])) * 100))[1h:])",
            "legendFormat": "CPU 1h Average",
            "refId": "B"
          },
          {
            "expr": "avg_over_time((100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[1m])) * 100))[1h:]) + 2 * stddev_over_time((100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[1m])) * 100))[1h:])",
            "legendFormat": "Upper Bound (2σ)",
            "refId": "C"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "custom": {
              "fillOpacity": 10,
              "lineInterpolation": "smooth"
            }
          },
          "overrides": [
            {
              "matcher": {"id": "byName", "options": "Upper Bound (2σ)"},
              "properties": [
                {"id": "color", "value": {"fixedColor": "red", "mode": "fixed"}},
                {"id": "custom.lineStyle", "value": {"fill": "dash"}}
              ]
            }
          ]
        }
      },
      {
        "id": 12,
        "title": "Spike Detection - Sudden Changes",
        "type": "state-timeline",
        "gridPos": {"h": 8, "w": 12, "x": 12, "y": 6},
        "targets": [
          {
            "expr": "(rate(node_cpu_seconds_total{mode!=\"idle\",instance=\"$instance\"}[1m]) - rate(node_cpu_seconds_total{mode!=\"idle\",instance=\"$instance\"}[5m])) > 0.1",
            "legendFormat": "CPU Spike",
            "refId": "A"
          },
          {
            "expr": "(rate(node_memory_MemAvailable_bytes{instance=\"$instance\"}[1m]) - rate(node_memory_MemAvailable_bytes{instance=\"$instance\"}[5m])) < -1048576",
            "legendFormat": "Memory Spike",
            "refId": "B"
          },
          {
            "expr": "(rate(node_disk_io_time_seconds_total{instance=\"$instance\"}[1m]) - rate(node_disk_io_time_seconds_total{instance=\"$instance\"}[5m])) > 0.1",
            "legendFormat": "Disk I/O Spike",
            "refId": "C"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "mappings": [
              {"options": {"0": {"color": "green", "text": "Normal"}}, "type": "value"},
              {"options": {"1": {"color": "red", "text": "SPIKE"}}, "type": "value"}
            ]
          }
        }
      },
      {
        "id": 20,
        "title": "👥 Step 3: Different Perspectives - User vs Application vs System",
        "type": "row",
        "collapsed": false,
        "gridPos": {"h": 1, "w": 24, "x": 0, "y": 14}
      },
      {
        "id": 21,
        "title": "User Perspective - Response Time",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 8, "x": 0, "y": 15},
        "targets": [
          {
            "expr": "histogram_quantile(0.95, sum(rate(prometheus_http_request_duration_seconds_bucket[5m])) by (le)) * 1000",
            "legendFormat": "p95 Response Time",
            "refId": "A"
          },
          {
            "expr": "histogram_quantile(0.50, sum(rate(prometheus_http_request_duration_seconds_bucket[5m])) by (le)) * 1000",
            "legendFormat": "p50 Response Time",
            "refId": "B"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "ms",
            "custom": {
              "fillOpacity": 20,
              "lineInterpolation": "smooth"
            },
            "thresholds": {
              "steps": [
                {"color": "green", "value": 0},
                {"color": "yellow", "value": 100},
                {"color": "red", "value": 500}
              ]
            }
          }
        }
      },
      {
        "id": 22,
        "title": "Application Perspective - Request Processing",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 8, "x": 8, "y": 15},
        "targets": [
          {
            "expr": "sum(rate(prometheus_http_requests_total[5m]))",
            "legendFormat": "Request Rate",
            "refId": "A"
          },
          {
            "expr": "sum(rate(prometheus_http_requests_total{code=~\"5..\"}[5m]))",
            "legendFormat": "Error Rate",
            "refId": "B"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "reqps",
            "custom": {
              "fillOpacity": 30,
              "axisPlacement": "auto"
            }
          },
          "overrides": [
            {
              "matcher": {"id": "byName", "options": "Error Rate"},
              "properties": [
                {"id": "color", "value": {"fixedColor": "red", "mode": "fixed"}},
                {"id": "custom.axisPlacement", "value": "right"}
              ]
            }
          ]
        }
      },
      {
        "id": 23,
        "title": "System Perspective - Resource Utilization",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 8, "x": 16, "y": 15},
        "targets": [
          {
            "expr": "100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[5m])) * 100)",
            "legendFormat": "CPU %",
            "refId": "A"
          },
          {
            "expr": "(node_memory_MemTotal_bytes{instance=\"$instance\"} - node_memory_MemAvailable_bytes{instance=\"$instance\"}) / node_memory_MemTotal_bytes{instance=\"$instance\"} * 100",
            "legendFormat": "Memory %",
            "refId": "B"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "max": 100,
            "custom": {
              "fillOpacity": 40
            }
          }
        }
      },
      {
        "id": 30,
        "title": "📐 Step 4: Queuing Theory Analysis - Understanding Saturation",
        "type": "row",
        "collapsed": false,
        "gridPos": {"h": 1, "w": 24, "x": 0, "y": 23}
      },
      {
        "id": 31,
        "title": "Queue Depth & Wait Time Correlation",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 24},
        "targets": [
          {
            "expr": "node_load1{instance=\"$instance\"}",
            "legendFormat": "Load Average (Queue)",
            "refId": "A"
          },
          {
            "expr": "histogram_quantile(0.95, sum(rate(prometheus_http_request_duration_seconds_bucket[5m])) by (le)) * 1000",
            "legendFormat": "p95 Latency (ms)",
            "refId": "B"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "short",
            "custom": {
              "fillOpacity": 20,
              "axisPlacement": "left"
            }
          },
          "overrides": [
            {
              "matcher": {"id": "byName", "options": "p95 Latency (ms)"},
              "properties": [
                {"id": "unit", "value": "ms"},
                {"id": "custom.axisPlacement", "value": "right"}
              ]
            }
          ]
        }
      },
      {
        "id": 32,
        "title": "Utilization vs Response Time Curve",
        "type": "scatter",
        "gridPos": {"h": 8, "w": 12, "x": 12, "y": 24},
        "targets": [
          {
            "expr": "100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[1m])) * 100)",
            "legendFormat": "CPU Utilization",
            "refId": "A"
          },
          {
            "expr": "histogram_quantile(0.95, sum(rate(prometheus_http_request_duration_seconds_bucket[1m])) by (le)) * 1000",
            "legendFormat": "Response Time",
            "refId": "B"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "custom": {
              "scatterShow": true,
              "lineShow": true
            }
          }
        },
        "options": {
          "series": [
            {
              "x": "A",
              "y": "B"
            }
          ]
        }
      },
      {
        "id": 40,
        "title": "🔬 Step 5: Hypothesis Testing & Validation",
        "type": "row",
        "collapsed": false,
        "gridPos": {"h": 1, "w": 24, "x": 0, "y": 32}
      },
      {
        "id": 41,
        "title": "Before/After Comparison - Change Impact",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 33},
        "targets": [
          {
            "expr": "avg_over_time((100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[5m])) * 100))[30m:])",
            "legendFormat": "CPU - 30min avg",
            "refId": "A"
          },
          {
            "expr": "100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[5m])) * 100)",
            "legendFormat": "CPU - Current",
            "refId": "B"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "custom": {
              "fillOpacity": 30,
              "thresholdsStyle": {
                "mode": "dashed"
              }
            },
            "thresholds": {
              "steps": [
                {"color": "green", "value": 0},
                {"color": "yellow", "value": 70},
                {"color": "red", "value": 90}
              ]
            }
          }
        },
        "options": {
          "legend": {
            "displayMode": "table",
            "placement": "bottom",
            "calcs": ["mean", "delta", "diffperc"]
          }
        }
      },
      {
        "id": 42,
        "title": "Root Cause Analysis - Correlation Matrix",
        "type": "heatmap",
        "gridPos": {"h": 8, "w": 12, "x": 12, "y": 33},
        "targets": [
          {
            "expr": "sum by (mode) (increase(node_cpu_seconds_total{instance=\"$instance\"}[1m]))",
            "format": "heatmap",
            "legendFormat": "{{mode}}",
            "refId": "A"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "custom": {
              "scaleDistribution": {
                "type": "linear"
              }
            }
          }
        }
      },
      {
        "id": 50,
        "title": "⏰ Time Scale Analysis - Microseconds to Minutes",
        "type": "row",
        "collapsed": false,
        "gridPos": {"h": 1, "w": 24, "x": 0, "y": 41}
      },
      {
        "id": 51,
        "title": "Multi-Scale Time Analysis",
        "type": "timeseries",
        "gridPos": {"h": 8, "w": 24, "x": 0, "y": 42},
        "targets": [
          {
            "expr": "increase(node_context_switches_total{instance=\"$instance\"}[10s])",
            "legendFormat": "Context Switches (10s)",
            "refId": "A"
          },
          {
            "expr": "increase(node_context_switches_total{instance=\"$instance\"}[1m])",
            "legendFormat": "Context Switches (1m)",
            "refId": "B"
          },
          {
            "expr": "increase(node_context_switches_total{instance=\"$instance\"}[5m])",
            "legendFormat": "Context Switches (5m)",
            "refId": "C"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "short",
            "custom": {
              "fillOpacity": 20,
              "lineInterpolation": "smooth"
            }
          }
        }
      },
      {
        "id": 60,
        "title": "📋 Investigation Summary & Actions",
        "type": "row",
        "collapsed": false,
        "gridPos": {"h": 1, "w": 24, "x": 0, "y": 50}
      },
      {
        "id": 61,
        "title": "Investigation Checklist",
        "type": "text",
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 51},
        "options": {
          "mode": "markdown",
          "content": "## Performance Investigation Checklist\n\n### ✅ Completed Steps:\n1. ☑️ **Global Metrics Collected**\n   - CPU, Memory, Disk, Network baseline established\n\n2. ☑️ **Anomalies Identified**\n   - Statistical outliers detected\n   - Spike patterns recognized\n\n3. ☑️ **Multiple Perspectives Analyzed**\n   - User: Response time metrics\n   - Application: Request processing\n   - System: Resource utilization\n\n### 🔄 Next Actions:\n4. **Form Hypothesis**\n   - Based on correlation patterns\n   - Consider queuing theory implications\n\n5. **Test & Validate**\n   - Apply changes\n   - Measure before/after impact\n   - Document results\n\n### 📊 Key Findings:\n- **Primary Bottleneck**: [Identify from data]\n- **Root Cause**: [Determine from analysis]\n- **Recommended Action**: [Based on methodology]"
        }
      },
      {
        "id": 62,
        "title": "Performance Score Card",
        "type": "stat",
        "gridPos": {"h": 8, "w": 12, "x": 12, "y": 51},
        "targets": [
          {
            "expr": "100 - ((sum(rate(prometheus_http_requests_total{code=~\"5..\"}[5m])) / sum(rate(prometheus_http_requests_total[5m]))) * 100)",
            "legendFormat": "Success Rate",
            "refId": "A"
          },
          {
            "expr": "100 - (100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\",instance=\"$instance\"}[5m])) * 100))",
            "legendFormat": "CPU Headroom",
            "refId": "B"
          },
          {
            "expr": "node_memory_MemAvailable_bytes{instance=\"$instance\"} / node_memory_MemTotal_bytes{instance=\"$instance\"} * 100",
            "legendFormat": "Memory Available",
            "refId": "C"
          },
          {
            "expr": "100 - (max(rate(node_disk_io_time_seconds_total{instance=\"$instance\"}[5m])) * 100)",
            "legendFormat": "Disk Headroom",
            "refId": "D"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "min": 0,
            "max": 100,
            "thresholds": {
              "steps": [
                {"color": "red", "value": 0},
                {"color": "yellow", "value": 50},
                {"color": "green", "value": 80}
              ]
            }
          }
        },
        "options": {
          "colorMode": "background",
          "graphMode": "none",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": ["lastNotNull"]
          }
        }
      }
    ]
  }
}